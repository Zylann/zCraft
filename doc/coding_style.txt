================================================================================
Expected coding style for the whole project
================================================================================

Class names :
	CamelCase, first letter upper case.
	Interfaces are prefixed by I, abstract classes are prefixed by A.

function and variable names :
	camelCase, first letter lower case

member variables :
	prefixed by m_ if the class owns their memory allocation,
	prefixed by r_ if they are treated as references. For example, a wheel
	keeping a pointer on the car may use r_parent as member variable,
	but shouldn't do a delete on it.
	prefix variables by _ should be allowed, then the r_ semantic
	would be changed to a "Ref" suffix.

file policy :
	Extensions are hpp and cpp.
	1 class per file, except for internal uses or convenience.
	each file has the name of the class, without the A or I prefix.
	if there is no classes in the file, its name must be lower case.
	folders are allowed as separated packages or sub-packages.
	Don't forget to include the namespace in header guards.
	TEMPORARY:
		do not use the same CPP file name twice,
		because qmake doesn't likes this. Two HPPs is Ok.

Margin :
	set to 80 characters.
	Strip the code on several lines if it overlaps to much.

Indentation : tabs

Brace policy :
	Aligned, indent after.
	Even conditions before single operation should have braces too,
	except for clarity cases.
